{"version":3,"sources":["../src/ros_ctrl.js"],"names":["PanelCtrl","_","ros","ROSLIB","Ros","url","on","console","log","error","panelDefaults","topic","RosCtrl","$scope","$injector","defaultsDeep","panel","events","onInitEditMode","bind","onPanelTeardown","render","onRender","messages","topics","types","subscribeTopic","getTopics","addEditorTab","$timeout","cancel","nextTickPromise","listener","Topic","name","messageType","parent","subscribe","message","push","data","topicsClient","Service","serviceType","request","ServiceRequest","callService","result","templateUrl"],"mappings":"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","file":"ros_ctrl.js","sourcesContent":["import { PanelCtrl } from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport './roslib.js';\nimport './css/ros-panel.css!';\n\n\nvar ros = new ROSLIB.Ros({\n  url : 'ws://localhost:9090'\n});\n\nros.on('connection', function() {\n  console.log('Connected to websocket server.');\n});\n\nros.on('error', function(error) {\n  console.log('Error connecting to websocket server: ', error);\n});\n\nros.on('close', function() {\n  console.log('Connection to websocket server closed.');\n});\n\nconst panelDefaults = {\n  topic: \"\"\n};\n\nexport class RosCtrl extends PanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    _.defaultsDeep(this.panel, panelDefaults);\n\n    // if (!(this.panel.countdownSettings.endCountdownTime instanceof Date)) {\n      // this.panel.countdownSettings.endCountdownTime = moment(this.panel.countdownSettings.endCountdownTime).toDate();\n    // }\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n    this.events.on('render', this.onRender.bind(this));\n\n    this.messages = [];\n    this.topics = [];\n    this.types = [];\n\n\n    console.log(this.panel.topic);\n    if (this.panel.topic != \"\") {\n      this.subscribeTopic(this.panel.topic);\n    }\n\n\n    this.getTopics();\n  }\n\n  onRender() {\n    console.log(\"RENDERING\");\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/ros-panel/editor.html', 2);\n  }\n\n  onPanelTeardown() {\n    this.$timeout.cancel(this.nextTickPromise);\n  }\n\n  subscribeTopic(topic) {\n\n    var listener = new ROSLIB.Topic({\n      ros : ros,\n      name : topic,\n      messageType : 'std_msgs/String'\n    });\n\n    var parent = this;\n    this.panel.topic = topic;\n\n    listener.subscribe(function(message) {\n      parent.messages.push(message.data);\n      parent.render();\n    });\n  }\n\n  getTopics() {\n\n    console.log(\"TOPICS\");\n    var topicsClient = new ROSLIB.Service({\n      ros : ros,\n      name : '/rosapi/topics',\n      serviceType : 'rosapi/Topics'\n    });\n\n    var request = new ROSLIB.ServiceRequest();\n\n    var parent = this;\n    topicsClient.callService(request, function(result) {\n\n      console.log(parent.topics);\n      parent.topics = result.topics;\n      parent.types = result.types;\n    });\n\n    this.nextTickPromise = this.$timeout(this.getTopics.bind(this), 10000);\n  };\n}\n\nRosCtrl.templateUrl = 'module.html';\n"]}